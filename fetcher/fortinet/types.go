package fortinet

import "time"

type advisory struct {
	ID              string          `json:"id"`
	Title           string          `json:"title"`
	Summary         string          `json:"summary"`
	Description     string          `json:"description"`
	Vulnerabilities []vulnerability `json:"vulnerabilities"`
	References      []reference     `json:"references"`
	Published       time.Time       `json:"published"`
	Updated         time.Time       `json:"updated"`
	AdvisoryURL     string          `json:"advisory_url"`
}

type vulnerability struct {
	ID          string       `json:"id"`
	CVE         string       `json:"cve"`
	Definitions []definition `json:"definitions"`
}

type definition struct {
	Configurations []configuration `json:"configurations"`
	CVSSv2         *cvss           `json:"cvssv2"`
	CVSSv3         *cvss           `json:"cvssv3"`
	CWE            []string        `json:"cwe"`
	Impact         string          `json:"impact"`
	ExploitStatus  string          `json:"exploit_status"`
}

type configuration struct {
	Nodes    []element      `json:"nodes"`
	Children *configuration `json:"children"`
}

type element struct {
	Description string     `json:"description"`
	CPE         string     `json:"cpe"`
	Affected    expression `json:"affected"`
	FixedIn     []string   `json:"fixed_in"`
}

type expression struct {
	Eqaul        *string `json:"eq"`
	GreaterThan  *string `json:"gt"`
	GreaterEqaul *string `json:"ge"`
	LessThan     *string `json:"lt"`
	LessEqual    *string `json:"le"`
}

type cvss struct {
	BaseScore          *float64 `json:"base_score"`
	TemporalScore      *float64 `json:"temporal_score"`
	EnvironmentalScore *float64 `json:"environmental_score"`
	Vector             string   `json:"vector"`
}

type reference struct {
	Description string `json:"description"`
	URL         string `json:"url"`
}
